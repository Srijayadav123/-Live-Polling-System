{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\Downloads\\\\live-polling\\\\frontend\\\\src\\\\pages\\\\TeacherDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CreatePollForm from \"../components/CreatePollForm\";\nimport ResultsChart from \"../components/ResultsChart\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nexport default function TeacherDashboard() {\n  _s();\n  const [poll, setPoll] = useState(null);\n  const [addQuestion, setAddQuestion] = useState(false);\n  const [results, setResults] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    socket.on(\"newPoll\", data => {\n      setPoll(data);\n      setResults(data.options);\n    });\n    socket.on(\"pollResults\", data => setResults(data));\n    socket.on(\"pollEnded\", () => {\n      setPoll(null);\n      fetchHistory();\n    });\n    fetchHistory();\n    return () => {\n      socket.off(\"newPoll\");\n      socket.off(\"pollResults\");\n      socket.off(\"pollEnded\");\n    };\n  }, []);\n  const fetchHistory = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/polls/history\");\n      if (!res.ok) return;\n      const data = await res.json();\n      setHistory(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleCreatePoll = async pollData => {\n    try {\n      const res = await fetch(\"http://localhost:5000/polls\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(pollData)\n      });\n      if (!res.ok) throw new Error(\"Failed to create poll\");\n      const data = await res.json();\n      setPoll(data.poll);\n      setAddQuestion(false);\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating poll\");\n    }\n  };\n  const handleEndPoll = () => {\n    socket.emit(\"endPoll\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teacher Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAddQuestion(!addQuestion),\n      children: addQuestion ? \"Hide Question Form\" : \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), addQuestion && /*#__PURE__*/_jsxDEV(CreatePollForm, {\n      onCreate: handleCreatePoll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), poll && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Poll:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: poll.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsChart, {\n        options: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Participants: \", poll.participants.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEndPoll,\n        children: \"End Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Poll History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), history.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          margin: \"10px\",\n          padding: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 18\n          }, this), \" \", p.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ResultsChart, {\n          options: p.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Participants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 18\n          }, this), \" \", p.participants.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TeacherDashboard, \"ImABOWopiGZdesHfr1ISTSiEOpA=\");\n_c = TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","CreatePollForm","ResultsChart","io","jsxDEV","_jsxDEV","socket","TeacherDashboard","_s","poll","setPoll","addQuestion","setAddQuestion","results","setResults","history","setHistory","on","data","options","fetchHistory","off","res","fetch","ok","json","err","console","error","handleCreatePoll","pollData","method","headers","body","JSON","stringify","Error","alert","handleEndPoll","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCreate","question","participants","join","length","map","p","style","border","margin","padding","id","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/Downloads/live-polling/frontend/src/pages/TeacherDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CreatePollForm from \"../components/CreatePollForm\";\r\nimport ResultsChart from \"../components/ResultsChart\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nexport default function TeacherDashboard() {\r\n  const [poll, setPoll] = useState(null);\r\n  const [addQuestion, setAddQuestion] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"newPoll\", (data) => {\r\n      setPoll(data);\r\n      setResults(data.options);\r\n    });\r\n\r\n    socket.on(\"pollResults\", (data) => setResults(data));\r\n\r\n    socket.on(\"pollEnded\", () => {\r\n      setPoll(null);\r\n      fetchHistory();\r\n    });\r\n\r\n    fetchHistory();\r\n\r\n    return () => {\r\n      socket.off(\"newPoll\");\r\n      socket.off(\"pollResults\");\r\n      socket.off(\"pollEnded\");\r\n    };\r\n  }, []);\r\n\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/polls/history\");\r\n      if (!res.ok) return;\r\n      const data = await res.json();\r\n      setHistory(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleCreatePoll = async (pollData) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/polls\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(pollData),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to create poll\");\r\n      const data = await res.json();\r\n      setPoll(data.poll);\r\n      setAddQuestion(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error creating poll\");\r\n    }\r\n  };\r\n\r\n  const handleEndPoll = () => {\r\n    socket.emit(\"endPoll\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Teacher Dashboard</h1>\r\n      <button onClick={() => setAddQuestion(!addQuestion)}>\r\n        {addQuestion ? \"Hide Question Form\" : \"Add Question\"}\r\n      </button>\r\n      {addQuestion && <CreatePollForm onCreate={handleCreatePoll} />}\r\n\r\n      {poll && (\r\n        <div>\r\n          <h2>Current Poll:</h2>\r\n          <p>{poll.question}</p>\r\n          <ResultsChart options={results} />\r\n          <h4>Participants: {poll.participants.join(\", \")}</h4>\r\n          <button onClick={handleEndPoll}>End Poll</button>\r\n        </div>\r\n      )}\r\n\r\n      {history.length > 0 && (\r\n        <div>\r\n          <h2>Poll History</h2>\r\n          {history.map((p) => (\r\n            <div key={p.id} style={{ border: \"1px solid #ccc\", margin: \"10px\", padding: \"5px\" }}>\r\n              <p><strong>Question:</strong> {p.question}</p>\r\n              <ResultsChart options={p.options} />\r\n              <p><strong>Participants:</strong> {p.participants.join(\", \")}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}