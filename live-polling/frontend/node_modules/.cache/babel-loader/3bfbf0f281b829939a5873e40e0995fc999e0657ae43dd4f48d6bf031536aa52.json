{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\Downloads\\\\live-polling\\\\frontend\\\\src\\\\components\\\\ResultsChart.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultsChart({\n  options\n}) {\n  if (!options) return null;\n  const colors = ['#382ec3ff', '#382ec3ff', '#382ec3ff', '#382ec3ff', '#3B82F6'];\n  const data = options.map((o, i) => ({\n    name: o.text,\n    votes: o.votes,\n    color: colors[i % colors.length]\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        allowDecimals: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"votes\",\n        label: {\n          position: 'top',\n          fill: '#333'\n        },\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.color\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = ResultsChart;\nvar _c;\n$RefreshReg$(_c, \"ResultsChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","ResultsChart","options","colors","data","map","o","i","name","text","votes","color","length","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","allowDecimals","label","position","fill","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/Downloads/live-polling/frontend/src/components/ResultsChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nexport default function ResultsChart({ options }) {\r\n  if (!options) return null;\r\n\r\n  const colors = ['#382ec3ff', '#382ec3ff', '#382ec3ff', '#382ec3ff', '#3B82F6'];\r\n\r\n  const data = options.map((o, i) => ({\r\n    name: o.text,\r\n    votes: o.votes,\r\n    color: colors[i % colors.length],\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <BarChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis allowDecimals={false} />\r\n        <Tooltip />\r\n        <Bar dataKey=\"votes\" label={{ position: 'top', fill: '#333' }}>\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={entry.color} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,aAAa,EACbC,IAAI,EACJC,mBAAmB,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAChD,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;EAEzB,MAAMC,MAAM,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC;EAE9E,MAAMC,IAAI,GAAGF,OAAO,CAACG,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAClCC,IAAI,EAAEF,CAAC,CAACG,IAAI;IACZC,KAAK,EAAEJ,CAAC,CAACI,KAAK;IACdC,KAAK,EAAER,MAAM,CAACI,CAAC,GAAGJ,MAAM,CAACS,MAAM;EACjC,CAAC,CAAC,CAAC;EAEH,oBACEZ,OAAA,CAACF,mBAAmB;IAACe,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5Cf,OAAA,CAACT,QAAQ;MAACa,IAAI,EAAEA,IAAK;MAACY,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAL,QAAA,gBACvEf,OAAA,CAACJ,aAAa;QAACyB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCzB,OAAA,CAACP,KAAK;QAACiC,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBzB,OAAA,CAACN,KAAK;QAACiC,aAAa,EAAE;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BzB,OAAA,CAACL,OAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXzB,OAAA,CAACR,GAAG;QAACkC,OAAO,EAAC,OAAO;QAACE,KAAK,EAAE;UAAEC,QAAQ,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAO,CAAE;QAAAf,QAAA,EAC3DX,IAAI,CAACC,GAAG,CAAC,CAAC0B,KAAK,EAAEC,KAAK,kBACrBhC,OAAA,CAACH,IAAI;UAAuBiC,IAAI,EAAEC,KAAK,CAACpB;QAAM,GAAnC,QAAQqB,KAAK,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsB,CACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B;AAACQ,EAAA,GA1BuBhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}