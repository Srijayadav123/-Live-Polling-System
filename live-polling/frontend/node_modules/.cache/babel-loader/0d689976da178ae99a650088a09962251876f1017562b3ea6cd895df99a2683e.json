{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\Downloads\\\\live-polling\\\\frontend\\\\src\\\\pages\\\\PollRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport ResultsChart from \"../components/ResultsChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nexport default function PollRoom() {\n  _s();\n  const [poll, setPoll] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [results, setResults] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(60); // default 60 sec\n  const timerRef = useRef(null);\n  const studentName = localStorage.getItem(\"studentName\");\n\n  // Fetch current poll\n  useEffect(() => {\n    const fetchPoll = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/polls/current\");\n        if (!res.ok) return;\n        const data = await res.json();\n        setPoll(data);\n        setResults(data.options);\n        setTimeLeft(60);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchPoll();\n  }, []);\n\n  // Listen for live updates\n  useEffect(() => {\n    socket.on(\"newPoll\", data => {\n      setPoll(data);\n      setResults(data.options);\n      setSubmitted(false);\n      setSelectedOption(null);\n      setTimeLeft(60);\n    });\n    socket.on(\"pollResults\", data => setResults(data));\n    return () => {\n      socket.off(\"newPoll\");\n      socket.off(\"pollResults\");\n    };\n  }, []);\n\n  // Countdown timer\n  useEffect(() => {\n    if (!poll || submitted) return;\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          setSubmitted(true); // auto submit end\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerRef.current);\n  }, [poll, submitted]);\n  const handleSubmit = () => {\n    if (selectedOption === null) {\n      alert(\"Please select an option\");\n      return;\n    }\n    socket.emit(\"submitVote\", {\n      studentName,\n      optionIndex: selectedOption\n    });\n    setSubmitted(true);\n    clearInterval(timerRef.current);\n  };\n  if (!studentName) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please enter your name first!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 28\n  }, this);\n  if (!poll) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for a poll...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Poll Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: poll.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), poll.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: idx,\n            checked: selectedOption === idx,\n            onChange: () => setSelectedOption(idx),\n            disabled: timeLeft === 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), opt.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: selectedOption === null || timeLeft === 0,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsChart, {\n        options: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(PollRoom, \"iH5QV2EZUASRCoLjdHgYq0bJn+M=\");\n_c = PollRoom;\nvar _c;\n$RefreshReg$(_c, \"PollRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","ResultsChart","jsxDEV","_jsxDEV","socket","PollRoom","_s","poll","setPoll","selectedOption","setSelectedOption","submitted","setSubmitted","results","setResults","timeLeft","setTimeLeft","timerRef","studentName","localStorage","getItem","fetchPoll","res","fetch","ok","data","json","options","err","console","error","on","off","current","setInterval","prev","clearInterval","handleSubmit","alert","emit","optionIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","opt","idx","type","name","value","checked","onChange","disabled","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/Downloads/live-polling/frontend/src/pages/PollRoom.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport ResultsChart from \"../components/ResultsChart\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nexport default function PollRoom() {\r\n  const [poll, setPoll] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(60); // default 60 sec\r\n  const timerRef = useRef(null);\r\n  const studentName = localStorage.getItem(\"studentName\");\r\n\r\n  // Fetch current poll\r\n  useEffect(() => {\r\n    const fetchPoll = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/polls/current\");\r\n        if (!res.ok) return;\r\n        const data = await res.json();\r\n        setPoll(data);\r\n        setResults(data.options);\r\n        setTimeLeft(60);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchPoll();\r\n  }, []);\r\n\r\n  // Listen for live updates\r\n  useEffect(() => {\r\n    socket.on(\"newPoll\", (data) => {\r\n      setPoll(data);\r\n      setResults(data.options);\r\n      setSubmitted(false);\r\n      setSelectedOption(null);\r\n      setTimeLeft(60);\r\n    });\r\n\r\n    socket.on(\"pollResults\", (data) => setResults(data));\r\n\r\n    return () => {\r\n      socket.off(\"newPoll\");\r\n      socket.off(\"pollResults\");\r\n    };\r\n  }, []);\r\n\r\n  // Countdown timer\r\n  useEffect(() => {\r\n    if (!poll || submitted) return;\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setSubmitted(true); // auto submit end\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, [poll, submitted]);\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedOption === null) {\r\n      alert(\"Please select an option\");\r\n      return;\r\n    }\r\n    socket.emit(\"submitVote\", { studentName, optionIndex: selectedOption });\r\n    setSubmitted(true);\r\n    clearInterval(timerRef.current);\r\n  };\r\n\r\n  if (!studentName) return <p>Please enter your name first!</p>;\r\n  if (!poll) return <p>Waiting for a poll...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Poll Room</h1>\r\n      <p>{poll.question}</p>\r\n      {!submitted ? (\r\n        <div>\r\n          <p>Time Left: {timeLeft}s</p>\r\n          {poll.options.map((opt, idx) => (\r\n            <div key={idx}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"option\"\r\n                  value={idx}\r\n                  checked={selectedOption === idx}\r\n                  onChange={() => setSelectedOption(idx)}\r\n                  disabled={timeLeft === 0}\r\n                />\r\n                {opt.text}\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit} disabled={selectedOption === null || timeLeft === 0}>\r\n            Submit Answer\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h3>Live Results:</h3>\r\n          <ResultsChart options={results} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,eAAe,SAASK,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMmB,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMmB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;;EAEvD;EACAvB,SAAS,CAAC,MAAM;IACd,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAC9D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BlB,OAAO,CAACiB,IAAI,CAAC;QACbX,UAAU,CAACW,IAAI,CAACE,OAAO,CAAC;QACxBX,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxB,SAAS,CAAC,MAAM;IACdO,MAAM,CAAC2B,EAAE,CAAC,SAAS,EAAGN,IAAI,IAAK;MAC7BjB,OAAO,CAACiB,IAAI,CAAC;MACbX,UAAU,CAACW,IAAI,CAACE,OAAO,CAAC;MACxBf,YAAY,CAAC,KAAK,CAAC;MACnBF,iBAAiB,CAAC,IAAI,CAAC;MACvBM,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;IAEFZ,MAAM,CAAC2B,EAAE,CAAC,aAAa,EAAGN,IAAI,IAAKX,UAAU,CAACW,IAAI,CAAC,CAAC;IAEpD,OAAO,MAAM;MACXrB,MAAM,CAAC4B,GAAG,CAAC,SAAS,CAAC;MACrB5B,MAAM,CAAC4B,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnC,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,IAAI,IAAII,SAAS,EAAE;IAExBM,QAAQ,CAACgB,OAAO,GAAGC,WAAW,CAAC,MAAM;MACnClB,WAAW,CAAEmB,IAAI,IAAK;QACpB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACbC,aAAa,CAACnB,QAAQ,CAACgB,OAAO,CAAC;UAC/BrB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;UACpB,OAAO,CAAC;QACV;QACA,OAAOuB,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACnB,QAAQ,CAACgB,OAAO,CAAC;EAC9C,CAAC,EAAE,CAAC1B,IAAI,EAAEI,SAAS,CAAC,CAAC;EAErB,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI5B,cAAc,KAAK,IAAI,EAAE;MAC3B6B,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACAlC,MAAM,CAACmC,IAAI,CAAC,YAAY,EAAE;MAAErB,WAAW;MAAEsB,WAAW,EAAE/B;IAAe,CAAC,CAAC;IACvEG,YAAY,CAAC,IAAI,CAAC;IAClBwB,aAAa,CAACnB,QAAQ,CAACgB,OAAO,CAAC;EACjC,CAAC;EAED,IAAI,CAACf,WAAW,EAAE,oBAAOf,OAAA;IAAAsC,QAAA,EAAG;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC7D,IAAI,CAACtC,IAAI,EAAE,oBAAOJ,OAAA;IAAAsC,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,oBACE1C,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1C,OAAA;MAAAsC,QAAA,EAAIlC,IAAI,CAACuC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB,CAAClC,SAAS,gBACTR,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,GAAG,aAAW,EAAC1B,QAAQ,EAAC,GAAC;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC5BtC,IAAI,CAACoB,OAAO,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACzB9C,OAAA;QAAAsC,QAAA,eACEtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YACE+C,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEH,GAAI;YACXI,OAAO,EAAE5C,cAAc,KAAKwC,GAAI;YAChCK,QAAQ,EAAEA,CAAA,KAAM5C,iBAAiB,CAACuC,GAAG,CAAE;YACvCM,QAAQ,EAAExC,QAAQ,KAAK;UAAE;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,EACDG,GAAG,CAACQ,IAAI;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC,GAXAI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYR,CACN,CAAC,eACF1C,OAAA;QAAQsD,OAAO,EAAEpB,YAAa;QAACkB,QAAQ,EAAE9C,cAAc,KAAK,IAAI,IAAIM,QAAQ,KAAK,CAAE;QAAA0B,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAEN1C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB1C,OAAA,CAACF,YAAY;QAAC0B,OAAO,EAAEd;MAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvC,EAAA,CA7GuBD,QAAQ;AAAAqD,EAAA,GAARrD,QAAQ;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}