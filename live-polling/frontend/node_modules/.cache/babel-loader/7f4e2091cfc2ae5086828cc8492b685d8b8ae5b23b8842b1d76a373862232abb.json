{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\Downloads\\\\live-polling\\\\frontend\\\\src\\\\pages\\\\PollRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport ResultsChart from \"../components/ResultsChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nexport default function PollRoom() {\n  _s();\n  const [poll, setPoll] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [pollEnded, setPollEnded] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const studentName = sessionStorage.getItem(\"studentName\");\n  useEffect(() => {\n    // Join the first available poll automatically\n    // In real scenario, you may select poll by ID\n    socket.emit(\"joinPoll\", {\n      pollId: null,\n      name: studentName\n    });\n    socket.on(\"newPoll\", data => {\n      setPoll(data);\n      setResults(data.options);\n      setParticipants(data.participants);\n      setPollEnded(false);\n      setSelectedOption(\"\");\n    });\n    socket.on(\"pollResults\", data => {\n      setResults(data.options);\n      if (data.votesByStudent) setParticipants(Object.keys(data.votesByStudent));\n    });\n    socket.on(\"pollEnded\", () => setPollEnded(true));\n    socket.on(\"newParticipant\", name => {\n      setParticipants(prev => [...new Set([...prev, name])]);\n    });\n    return () => {\n      socket.off(\"newPoll\");\n      socket.off(\"pollResults\");\n      socket.off(\"pollEnded\");\n      socket.off(\"newParticipant\");\n    };\n  }, [studentName]);\n  const handleSubmit = () => {\n    if (!selectedOption) return alert(\"Please select an option\");\n    socket.emit(\"submitAnswer\", {\n      pollId: poll.id,\n      studentName,\n      selectedOption\n    });\n  };\n  if (!poll) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Waiting for a poll...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"20px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: poll.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n        marginBottom: \"15px\"\n      },\n      children: poll.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOption(opt.text),\n        style: {\n          padding: \"10px\",\n          cursor: \"pointer\",\n          backgroundColor: selectedOption === opt.text ? \"#007bff\" : \"#f0f0f0\",\n          color: selectedOption === opt.text ? \"#fff\" : \"#000\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"5px\"\n        },\n        children: opt.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), !pollEnded && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        padding: \"8px 16px\",\n        cursor: \"pointer\"\n      },\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Participants:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: participants.map((name, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), pollEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Poll Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsChart, {\n        options: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(PollRoom, \"ZFdhqHDmtvwOtWFGQaB97oca9gk=\");\n_c = PollRoom;\nvar _c;\n$RefreshReg$(_c, \"PollRoom\");","map":{"version":3,"names":["React","useState","useEffect","io","ResultsChart","jsxDEV","_jsxDEV","socket","PollRoom","_s","poll","setPoll","selectedOption","setSelectedOption","results","setResults","pollEnded","setPollEnded","participants","setParticipants","studentName","sessionStorage","getItem","emit","pollId","name","on","data","options","votesByStudent","Object","keys","prev","Set","off","handleSubmit","alert","id","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","fontFamily","question","display","flexDirection","gap","marginBottom","map","opt","idx","onClick","text","padding","cursor","backgroundColor","color","border","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/Downloads/live-polling/frontend/src/pages/PollRoom.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport ResultsChart from \"../components/ResultsChart\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nexport default function PollRoom() {\r\n  const [poll, setPoll] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [pollEnded, setPollEnded] = useState(false);\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const studentName = sessionStorage.getItem(\"studentName\");\r\n\r\n  useEffect(() => {\r\n    // Join the first available poll automatically\r\n    // In real scenario, you may select poll by ID\r\n    socket.emit(\"joinPoll\", { pollId: null, name: studentName });\r\n\r\n    socket.on(\"newPoll\", (data) => {\r\n      setPoll(data);\r\n      setResults(data.options);\r\n      setParticipants(data.participants);\r\n      setPollEnded(false);\r\n      setSelectedOption(\"\");\r\n    });\r\n\r\n    socket.on(\"pollResults\", (data) => {\r\n      setResults(data.options);\r\n      if (data.votesByStudent) setParticipants(Object.keys(data.votesByStudent));\r\n    });\r\n\r\n    socket.on(\"pollEnded\", () => setPollEnded(true));\r\n\r\n    socket.on(\"newParticipant\", (name) => {\r\n      setParticipants((prev) => [...new Set([...prev, name])]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"newPoll\");\r\n      socket.off(\"pollResults\");\r\n      socket.off(\"pollEnded\");\r\n      socket.off(\"newParticipant\");\r\n    };\r\n  }, [studentName]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!selectedOption) return alert(\"Please select an option\");\r\n    socket.emit(\"submitAnswer\", {\r\n      pollId: poll.id,\r\n      studentName,\r\n      selectedOption,\r\n    });\r\n  };\r\n\r\n  if (!poll) return <p style={{ textAlign: \"center\" }}>Waiting for a poll...</p>;\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"20px auto\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <h2>{poll.question}</h2>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\", marginBottom: \"15px\" }}>\r\n        {poll.options.map((opt, idx) => (\r\n          <button\r\n            key={idx}\r\n            onClick={() => setSelectedOption(opt.text)}\r\n            style={{\r\n              padding: \"10px\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: selectedOption === opt.text ? \"#007bff\" : \"#f0f0f0\",\r\n              color: selectedOption === opt.text ? \"#fff\" : \"#000\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            {opt.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {!pollEnded && (\r\n        <button\r\n          onClick={handleSubmit}\r\n          style={{ padding: \"8px 16px\", cursor: \"pointer\" }}\r\n        >\r\n          Submit Answer\r\n        </button>\r\n      )}\r\n\r\n      <h3 style={{ marginTop: \"20px\" }}>Participants:</h3>\r\n      <ul>\r\n        {participants.map((name, idx) => (\r\n          <li key={idx}>{name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      {pollEnded && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>Poll Results</h3>\r\n          <ResultsChart options={results} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}