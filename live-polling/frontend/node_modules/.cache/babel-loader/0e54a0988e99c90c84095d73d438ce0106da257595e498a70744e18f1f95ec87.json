{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\Downloads\\\\live-polling\\\\frontend\\\\src\\\\pages\\\\PollRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport ResultsChart from \"../components/ResultsChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nexport default function PollRoom() {\n  _s();\n  const [poll, setPoll] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [results, setResults] = useState([]);\n  const studentName = localStorage.getItem(\"studentName\");\n\n  // Fetch current poll on mount\n  useEffect(() => {\n    const fetchPoll = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/polls/current\");\n        if (!res.ok) return;\n        const data = await res.json();\n        setPoll(data);\n        setResults(data.options);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchPoll();\n  }, []);\n\n  // Listen to live updates\n  useEffect(() => {\n    socket.on(\"newPoll\", data => {\n      setPoll(data);\n      setResults(data.options);\n      setSubmitted(false);\n      setSelectedOption(null);\n    });\n    socket.on(\"pollResults\", data => {\n      setResults(data);\n    });\n    return () => {\n      socket.off(\"newPoll\");\n      socket.off(\"pollResults\");\n    };\n  }, []);\n  const handleSubmit = () => {\n    if (selectedOption === null) {\n      alert(\"Please select an option\");\n      return;\n    }\n    socket.emit(\"submitVote\", {\n      studentName,\n      optionIndex: selectedOption\n    });\n    setSubmitted(true);\n  };\n  if (!studentName) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please enter your name first!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 28\n  }, this);\n  if (!poll) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for a poll...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Poll Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: poll.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [poll.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: idx,\n            checked: selectedOption === idx,\n            onChange: () => setSelectedOption(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), opt.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsChart, {\n        options: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(PollRoom, \"lQSYXuyQyQ7OtdLjjM2Ft2LoQMU=\");\n_c = PollRoom;\nvar _c;\n$RefreshReg$(_c, \"PollRoom\");","map":{"version":3,"names":["React","useEffect","useState","io","ResultsChart","jsxDEV","_jsxDEV","socket","PollRoom","_s","poll","setPoll","selectedOption","setSelectedOption","submitted","setSubmitted","results","setResults","studentName","localStorage","getItem","fetchPoll","res","fetch","ok","data","json","options","err","console","error","on","off","handleSubmit","alert","emit","optionIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","map","opt","idx","type","name","value","checked","onChange","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/Downloads/live-polling/frontend/src/pages/PollRoom.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport ResultsChart from \"../components/ResultsChart\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nexport default function PollRoom() {\r\n  const [poll, setPoll] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const studentName = localStorage.getItem(\"studentName\");\r\n\r\n  // Fetch current poll on mount\r\n  useEffect(() => {\r\n    const fetchPoll = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/polls/current\");\r\n        if (!res.ok) return;\r\n        const data = await res.json();\r\n        setPoll(data);\r\n        setResults(data.options);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchPoll();\r\n  }, []);\r\n\r\n  // Listen to live updates\r\n  useEffect(() => {\r\n    socket.on(\"newPoll\", (data) => {\r\n      setPoll(data);\r\n      setResults(data.options);\r\n      setSubmitted(false);\r\n      setSelectedOption(null);\r\n    });\r\n\r\n    socket.on(\"pollResults\", (data) => {\r\n      setResults(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"newPoll\");\r\n      socket.off(\"pollResults\");\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedOption === null) {\r\n      alert(\"Please select an option\");\r\n      return;\r\n    }\r\n    socket.emit(\"submitVote\", { studentName, optionIndex: selectedOption });\r\n    setSubmitted(true);\r\n  };\r\n\r\n  if (!studentName) return <p>Please enter your name first!</p>;\r\n  if (!poll) return <p>Waiting for a poll...</p>;\r\n\r\n  return (\r\n    <div className=\"poll-room\">\r\n      <h1>Poll Room</h1>\r\n      <p>{poll.question}</p>\r\n\r\n      {!submitted ? (\r\n        <div>\r\n          {poll.options.map((opt, idx) => (\r\n            <div key={idx}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"option\"\r\n                  value={idx}\r\n                  checked={selectedOption === idx}\r\n                  onChange={() => setSelectedOption(idx)}\r\n                />\r\n                {opt.text}\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleSubmit}>Submit Answer</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h3>Live Results:</h3>\r\n          <ResultsChart options={results} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}